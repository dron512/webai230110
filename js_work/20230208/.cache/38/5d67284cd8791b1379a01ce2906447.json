{"id":"ex06.html","dependencies":[{"name":"D:\\work\\js_work\\20230208\\package.json","includedInParent":true,"mtime":1675815738072}],"generated":{"html":"<script>function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar input = \"\\n\\uC77C\\uC790,\\uB2EC\\uB7EC,\\uC5D4\\n02,1000,99\\n03,2000,88\\n04,1005,77\\n05,1006,55\\n06,100,44\\n07,2000,22\\n08,3000,33\\n09,4000,87\\n\";\nconsole.log(input);\ninput = input.trim();\nconsole.log(input);\ninput = input.split('\\n');\nvar _iterator = _createForOfIteratorHelper(input),\n  _step;\ntry {\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    var item = _step.value;\n    console.log(item);\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}\ninput = input.map(function (line) {\n  return line.split(\",\");\n});\nconsole.log(input);\nconsole.log(JSON.stringify(input, null, 2));</script>"},"sourceMaps":null,"error":null,"hash":"9e368017166cb029e7e35d7c9bb3dbbc","cacheData":{"env":{}}}